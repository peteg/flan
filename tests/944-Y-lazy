-- The Y combinator is easy if we have laziness.

y :: ((Num -> Num) -> (Num -> Num)) -> Num -> Num
y f =
   let out :: Num -> Num
       out = f out ;
    in out
;

facG :: (Num -> Num) -> Num -> Num
facG f x = if x == 0 then 1 else x * f (x - 1) end

;

main = y facG 5
