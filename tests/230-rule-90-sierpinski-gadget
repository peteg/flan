-- A Sierpinski gadget, a simple cellular automaton.
-- Each generation is printed on a separate line.

inactive :: Char
inactive = ' '
;
active :: Char
active = '#'
;

append :: [Char] -> [Char] -> [Char]
append xxs ys =
  match xxs with
      []   -> ys
    | x:xs -> x : (append xs ys)
  end
;
replicate :: Num -> Char -> [Char]
replicate n c = if n == 0 then [] else c : replicate (n - 1) c end
;

-- Make unlines first-order.
app :: [Char] -> [Char] -> [Char]
app xxs ys = match xxs with [] -> '\n':ys | x:xs -> x : app xs ys end ;

loop :: [[Char]] -> [Char]
loop lls = match lls with [] -> [] | l:ls -> app l (loop ls) end ;

unlines :: [[Char]] -> [Char]
unlines lines = loop lines
;

-- Initially we have just one cell active, in the centre.

blanks :: [Char]
blanks = replicate 32 inactive
;
initial :: [Char]
initial = append blanks (active : blanks)
;

-- The rule: each cell has three "parents" from the previous
-- generation (NW, N, NE). If one or two of those parents are active,
-- then this cell is active too, otherwise it is inactive.

-- We take the edge cases to be inactive.

rule :: [Char] -> Char
rule xyzrest =
  match xyzrest with
      x:yzrest ->
        match yzrest with
            [] -> inactive
          | y:zrest ->
              match zrest with
                  [] -> inactive
                | z:rest ->
                    if    (x == inactive && y ==inactive && z == inactive)
                       || (x == active && y == active && z == active)
                      then inactive
                      else active
                    end
              end
        end
  end
;

-- Create a new generation from an older one.
step :: Char -> [Char] -> [Char]
step prev xxs =
  match xxs with
      []   -> []
    | x:xs -> rule (prev:xxs) : step x xs
  end
;

-- Create /n/ generations.

sierpinski_aux :: Num -> [Char] -> [[Char]]
sierpinski_aux n g = if n == 0 then [] else g : sierpinski_aux (n - 1) (step inactive g) end
;
sierpinski :: Num -> [[Char]]
sierpinski n = sierpinski_aux n initial
;

main = unlines (sierpinski 32)
